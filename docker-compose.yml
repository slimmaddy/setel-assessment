version: '3.7'

services:
#  workspace:
#    build:
#      context: .
#      dockerfile: docker/debug/node/Dockerfile
#    image: order-service
#    restart: on-failure
#    container_name: order-service
#    ports:
#      - ${PORT}:${PORT}
#    volumes:
#      - ./:/usr/src/app
#      - /usr/src/app/node_modules
#    env_file:
#      - .env
#    networks:
#      - internal
#    tty: true
#    stdin_open: true
  mysql:
    image: mysql/mysql-server:8.0.23
    restart: always
    container_name: order-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - .mysql-data:/var/lib/mysql
#    networks:
#      - internal
  zookeeper:
    image: 'bitnami/zookeeper:3.7.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
      image: 'bitnami/kafka:2.8.0'
      ports:
        - '9092:9092'
        - '9093:9093'
      environment:
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
        - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      depends_on:
        - zookeeper
networks:
  internal:
    name: internal
    driver: bridge